@page "/product/{Id:int}"
@inject IProductService ProductService

<h3 class="m-4">ProductDetails</h3>

@if (@product == null)
{
    <span> @Message</span>
}
else
{
    <MudGrid>
        <MudItem xs="12" md="8" Class="d-flex justify-center align-center" Style="height:500px;">
            <MudImage ObjectFit="ObjectFit.Cover" Height="500" Width="500" Src="@product.ProductUrl" Alt="Mony the dog" Elevation="25" Class="rounded-lg" />
        </MudItem>
        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4 mt-6 mt-lg-16" Elevation="0">
                <MudText Typo="Typo.h6">Product Details</MudText>
                <MudText> <span class="font-bold">Product Name:</span> @product.ProductName</MudText>
                <MudText> <span class="font-bold">Product Description:</span> @product.ProductDescription</MudText>
                <MudText> <span class="font-bold">Product Price:</span> <span class="price"> @product.ProductPrice</span> </MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>

}

@code {
    private Product product = null;

    private string Message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            Message = result.Message;
        }
        else
        {
            product = result.Data;
        }
    }
}
<style type="text/css">
    .price {
        color: green
    }

    .font-bold {
        font-weight: bold;
    }
</style>